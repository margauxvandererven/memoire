from imports import *
import tkinter as tk
from tkinter import ttk
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QLabel
from PyQt6.QtCore import Qt

repertory_memoire="/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/"

def create_validation_window(raie, raies_validees):
    try:
        app = QApplication.instance()
        if app is None:
            app = QApplication([])

        window = QWidget()
        window.setWindowTitle(f"Validation de la raie {raie}")
        window.setFixedSize(300, 150)

        layout = QVBoxLayout()
        
        # Label
        label = QLabel(f"Garder la raie {raie:.2f} Å ? (o/n)")
        label.setStyleSheet("font-size: 14pt;")
        label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(label)
        
        # Boutons
        btn_layout = QVBoxLayout()
        
        oui_button = QPushButton("Oui (o)")
        oui_button.setStyleSheet("font-size: 12pt; padding: 5px;")
        oui_button.clicked.connect(lambda: validate_raie(window, raie, raies_validees))
        
        non_button = QPushButton("Non (n)")
        non_button.setStyleSheet("font-size: 12pt; padding: 5px;")
        non_button.clicked.connect(lambda: window.close())
        
        btn_layout.addWidget(oui_button)
        btn_layout.addWidget(non_button)
        layout.addLayout(btn_layout)
        
        window.setLayout(layout)

        # Ajout des raccourcis clavier
        def keyPressEvent(event):
            if event.text().lower() == 'o':
                validate_raie(window, raie, raies_validees)
            elif event.text().lower() == 'n':
                window.close()
        
        window.keyPressEvent = keyPressEvent
        
        window.show()
        app.exec()
        
    except Exception as e:
        print(f"Erreur dans l'interface graphique : {e}")
        # Fallback en mode console
        reponse = input(f"Garder la raie {raie:.2f} Å ? (o/n): ").lower().strip()
        if reponse == 'o':
            raies_validees.append(raie)

def validate_raie(window, raie, raies_validees):
    raies_validees.append(raie)
    window.close()


# raies = input("Entrez les raies à valider (séparées par des virgules): ").split(",")
# raies = [float(r) for r in raies]
# 1e-8 ew limit
# raies=[14565.938, 14651.021, 14652.901, 14689.758, 14702.962, 14709.402, 14719.653, 14722.348, 14729.551, 14737.574, 14745.387, 14749.788, 14752.356, 14814.734, 14826.408, 14897.405, 14903.933, 14909.632, 14911.389, 14947.386, 14956.151, 14956.57, 14959.22, 14968.327, 14988.778, 17005.449, 17011.096, 17047.65, 17161.104, 17204.297, 17302.303, 17420.824, 17467.301, 17608.691, 17683.916, 17706.615, 17721.086, 17721.373, 17728.102, 17771.123, 17845.941, 17845.963, 17930.154, 17932.6, 17937.799, 17993.316, 18002.012, 18029.309, 18073.689, 18084.949, 18093.145, 18096.293, 18155.672, 18189.932, 18224.184, 18276.688, 18352.434, 18360.594, 18366.143, 18379.814, 18392.461, 18406.873, 18414.414, 18418.99, 18441.771, 18448.059, 18449.059,
#  18773.512, 18856.645, 18905.486, 18942.059, 18987.006, 19096.49, 19113.668, 19121.811, 19260.455, 19265.566, 19335.146, 19340.158, 19469.787, 19484.348, 19592.736, 19613.156, 19635.309, 19791.865, 19846.648, 19923.344, 20023.82, 20092.049, 20281.084, 20349.713, 20629.684, 20677.34, 20698.312, 20716.941, 20736.852, 20799.053, 20840.803, 20991.037, 21178.156, 21238.467, 21489.572, 22257.107, 22260.18, 22380.797, 22392.879, 22419.977, 22473.264, 22619.838, 22740.416, 22832.363, 23144.58, 23164.225, 23308.477, 23566.66, 23683.74, 23694.85, 24333.475, 24374.352, 24487.668, 24547.941, 24556.553, 24648.422, 24729.092, 24923.68
#  ]

# 1e-9 ew limit
# raies=[
#     # 14507.819, 14515.637, 14524.334, 14525.623, 14548.606, 14560.065, 14568.374, 14581.155, 14600.152, 14603.663, 14616.042, 14620.101, 14641.656, 14648.03, 14650.677, 14651.814, 14654.398, 14659.029, 14668.345, 14672.116, 14672.779, 14673.008, 14674.252, 14679.831, 14680.502, 14691.832, 14718.571, 14725.434, 14732.368, 14745.467, 14754.041, 14754.594, 14755.861, 14769.491, 14773.24, 14781.954, 14787.543, 14805.169, 14806.002, 14806.838, 14808.318, 14815.248, 14815.923, 14823.049, 14835.594, 14838.275, 14842.704, 14847.163, 14848.176, 14849.066, 14861.147, 14863.668, 14866.605, 14867.607, 14870.619, 14871.07, 14876.541, 14905.271, 14929.151, 14931.852, 14932.682, 14937.1, 14938.631, 14939.644, 14946.742, 14963.761, 14978.962, 14979.695, 14979.817, 14982.215, 14982.801, 14984.177, 14987.293, 17007.488, 17008.971, 17009.098, 17012.729, 17018.625, 17020.74, 17025.117, 17032.896, 17033.66, 17037.787, 17040.1, 17052.182, 17052.877, 17064.887, 17065.266, 17072.824, 17094.434, 17130.953, 17137.105, 17151.666, 17166.201, 17200.312, 17204.215, 17204.418, 17208.66, 17221.395, 17232.23, 17257.564, 17263.299, 17277.479, 17278.725, 17282.291, 17293.113, 17293.643, 17301.695, 17310.23, 17310.848, 17325.912, 17334.076, 17364.904, 17371.131, 17389.828, 17400.578, 17409.496, 17418.506, 17433.635, 17453.84, 17457.578, 17459.119, 17461.0, 17466.443, 17467.602, 17469.92, 17478.016, 17480.213, 17480.645, 17488.549, 17499.98, 17500.467, 17508.031, 17516.059, 17518.133, 17524.297, 17534.74, 17538.635, 17549.148, 17563.568, 17570.443, 17575.318, 17577.793, 17581.9, 17584.623, 17611.311, 17614.523, 17617.104, 17622.299, 17625.838, 17637.023, 17640.186, 17683.287, 17689.477, 17694.504, 17695.936, 17709.328, 17712.598, 17717.133, 17722.23, 17722.98, 17723.176, 17727.176, 17755.158, 17760.229, 17774.801, 17791.445, 17809.229, 17810.969, 17812.627, 17822.51, 17827.562, 17831.268, 17835.74, 17836.08, 17836.504, 17839.818, 17843.377, 17844.355, 17845.104, 17850.473, 17860.412, 17861.725, 17864.357, 17871.949, 17871.986, 17895.543, 17902.869, 17915.082, 17917.062, 17919.414, 17926.354, 17943.113, 17956.031, 17963.949, 17968.113, 17970.9, 17971.986, 17975.594, 17982.309, 17985.725, 17997.316, 17999.947, 18005.838, 18010.977, 18012.561, 18013.852, 18017.441, 18020.389, 18026.93, 18027.102, 18038.307, 18050.154, 18051.357, 18052.355, 18055.645, 18061.504, 18066.697, 18075.434, 18081.715, 18082.369, 18087.643, 18090.33, 18090.766, 18098.479, 18102.174, 18102.279, 18102.646, 18104.932, 18108.197, 18116.76, 18117.246, 18117.637, 18128.076, 18137.367, 18141.156, 18142.785, 18152.811, 18169.127, 18179.637, 18187.553, 18190.398, 18198.957, 18229.469, 18282.789, 18315.553, 18320.018, 18322.35, 18326.115, 18339.953, 18346.123, 18359.568, 18361.029, 18376.176, 18380.096, 18389.031, 18391.195, 18395.926, 18396.766, 18411.463, 18414.512, 18433.914, 18434.182, 18464.02, 18472.004, 18474.301, 18490.289, 18491.445, 18496.734, 18507.887, 18520.412, 18522.902, 18525.213, 18525.902, 18528.693, 18542.289, 18542.947, 18545.168, 18545.654, 18548.961, 18556.861, 18580.832, 18584.746, 18587.949, 18609.9, 18618.363, 18624.191, 18638.941, 18639.084, 18649.375, 18652.803, 18655.037, 18658.0, 18662.793, 18669.516, 18681.873, 18687.562, 18694.016, 18695.045, 18704.113, 18713.35, 18721.258, 18749.09, 18757.955, 18772.922, 18788.418, 18790.982, 18800.434, 18808.912, 18818.012, 18818.518, 18820.605, 18822.855, 18827.488, 18828.75, 18846.217, 18851.758, 18863.305, 18866.041, 18866.992, 18878.314, 18884.135, 18884.904, 18886.785, 18887.52, 18889.387, 18892.402, 18901.158, 18901.521, 18934.633, 18944.414, 18955.609,
#      19004.418, 19010.27, 19031.961, 19042.459, 19077.217, 19094.9, 19124.48, 19141.412, 19153.318, 19160.889, 19168.904, 19176.123, 19190.586, 19199.066, 19202.377, 19212.82, 19216.027, 19228.383, 19231.562, 19232.576, 19258.467, 19259.254, 19325.092, 19336.516, 19354.248, 19368.736, 19378.01, 19393.344, 19393.998, 19395.086, 19402.889, 19408.758, 19463.613, 19463.941, 19466.914, 19467.641, 19470.398, 19475.488, 19480.164, 19490.844, 19504.635, 19507.631, 19509.309, 19511.252, 19533.273, 19534.061, 19540.203, 19548.246, 19572.496, 19580.58, 19582.689, 19584.695, 19597.369, 19611.551, 19614.449, 19639.428, 19685.297, 19708.861, 19747.242, 19780.637, 19800.406, 19824.656, 19881.617, 19927.91, 19949.459, 19964.877, 19970.062, 19981.494, 20041.527, 20050.092, 20056.186, 20068.143, 20071.641, 20072.254, 20107.889, 20173.402, 20186.471, 20227.973, 20237.291, 20238.582, 20283.314, 20288.609, 20329.184, 20363.268, 20372.227, 20405.984, 20585.926, 20615.217, 20629.258, 20629.752, 20633.324, 20675.703, 20712.658, 20723.135, 20732.258, 20799.686, 20813.516, 20829.592, 20882.232, 20933.953, 20948.086, 21095.402, 21123.861, 21124.482, 21162.035, 21170.656, 21195.582, 21200.484, 21216.309, 21275.869, 21284.348, 21427.75, 21515.146, 21522.113, 21548.672, 21553.299, 21572.27, 21648.252, 21735.457, 21756.947, 21775.111, 21779.65, 21813.977, 21816.566, 21819.99, 21820.662, 21832.98, 21851.381, 21858.064, 21882.988, 21894.982, 21951.295, 21988.799, 22079.852, 22139.693, 22178.154, 22375.176, 22385.102, 22425.377, 22493.67, 22551.998, 22571.652, 22609.238, 22760.686, 22770.365, 22792.256, 22794.668, 22812.586, 22845.939, 22872.539, 22956.006, 22986.096, 23173.723, 23226.695, 23247.176, 23286.561, 23510.324, 23572.238, 23723.672, 23784.477, 23849.387, 23892.586, 23906.447, 23924.445, 24083.689, 24110.844, 24128.486, 24141.883, 24143.299, 24144.855, 24163.402, 24264.27, 24363.262, 24373.811, 24378.334, 24421.777, 24455.674, 24526.207, 24552.006, 24623.488, 24725.66, 24771.979, 24798.967, 24821.73, 24858.998, 24884.236, 24942.291, 24971.318
#     ]
# 1e-10 ew limit
# raies=[14509.812, 14510.793, 14518.306, 14519.665, 14521.144, 14523.76, 14528.302, 14531.256, 14532.274, 14537.261, 14544.044, 14550.004, 14556.538, 14563.767, 14566.069, 14568.648, 14572.163, 14572.375, 14574.325, 14574.423, 14575.437, 14576.765, 14576.818, 14577.073, 14579.828, 14585.376, 14588.945, 14590.845, 14593.92, 14601.062, 14601.781, 14606.712, 14621.828, 14623.321, 14628.102, 14630.386, 14632.469, 14634.902, 14636.049, 14638.306, 14641.093, 14646.197, 14655.34, 14658.605, 14661.719, 14671.659, 14677.34, 14693.966, 14700.048, 14702.741, 14713.232, 14724.624, 14737.459, 14742.936, 14742.936, 14743.999, 14745.052, 14748.73, 14755.541, 14765.754, 14767.519, 14767.771, 14768.585, 14771.646, 14771.872, 14776.664, 14778.833, 14793.104, 14796.08, 14802.913, 14818.918, 14822.351, 14828.555, 14832.499, 14834.312, 14838.426, 14845.454, 14845.829, 14848.691, 14854.092, 14858.777, 14862.051, 14862.21, 14867.714, 14867.961, 14871.028, 14880.495, 14894.869, 14896.924, 14899.759, 14918.211, 14931.078, 14934.896, 14943.244, 14947.806, 14949.713, 14952.215, 14954.021, 14954.55, 14955.82, 14962.957, 14970.03, 14971.127, 14973.438, 14974.338, 14978.174, 14978.495, 14982.048, 14984.66, 14989.05, 14990.167, 14992.748, 14993.389, 14993.622, 14993.665, 14995.203, 17004.631, 17015.477, 17019.971, 17022.191, 17023.293, 17025.111, 17025.639, 17036.826, 17045.008, 17047.637, 17055.934, 17057.934, 17061.092, 17061.25, 17067.357, 17067.529, 17070.539, 17070.549, 17071.193, 17072.934, 17075.119, 17078.008, 17081.775, 17091.303, 17098.219, 17098.941, 17107.674, 17108.715]
# RAIES_CO_TEST=[22929.34121, 23015.0066, 23061.59628, 23072.11902, 23073.92006, 23083.044, 23094.37156, 23106.10211, 23109.4062, 23118.23607, 23122.13423, 23130.77392, 23148.953, 23163.04853, 23177.60478, 23184.97502, 23192.62432, 23208.10977, 23229.9823, 23233.06385, 23236.57097, 23249.6578, 23251.06016, 23254.87953, 23256.31334, 23268.05367, 23273.14245, 23278.49875, 23287.49757, 23288.74682, 23292.62207, 23341.22859, 23349.10316, 23368.91118, 23384.44696, 23389.21521, 23408.53229, 23421.19548, 23424.344, 23426.2994, 23461.67352, 23490.73873, 23505.89735, 23526.6175, 23534.41856, 23540.9216, 23547.46709, 23550.70535, 23552.66118, 23556.25985, 23558.2771, 23562.25803, 23568.7014, 23570.72375, 23577.65391, 23592.67819, 23598.95903, 23605.66454, 23607.65302, 23609.38736, 23616.80246, 23626.40925, 23627.782, 23698.72233, 23701.82089, 23731.46591, 23733.79683, 23759.17193, 23762.87717, 23773.66438, 23778.14373, 23788.58405, 23793.89821, 23805.98686, 23814.92488, 23837.9561, 23843.87718, 23848.42121, 23855.8771, 23869.61828, 23877.94117, 23885.21591, 23895.73595, 23901.14948, 23903.89112, 23909.8119, 23912.47825, 23928.53747, 23944.40215, 23949.14397, 23978.93624, 23981.14126, 23984.69567, 24001.25825, 24003.97367, 24076.87064, 24086.14331, 24090.86595, 24093.28423, 24096.80184, 24113.29834, 24114.86367, 24146.51869, 24152.33022, 24156.5021, 24164.50359, 24168.56722, 24171.6835, 24187.36791, 24205.85614, 24214.01995, 24229.96515, 24237.71176, 24241.16993, 24247.721, 24249.04812, 24258.32372, 24288.55814, 24298.40183, 24320.05258, 24329.86866, 24339.44654, 24360.53929, 24365.18766, 24395.23411, 24397.34598, 24402.97369, 24405.05502, 24423.47865, 24480.38351, 24483.79423, 24485.59599, 24508.28863, 24518.8397, 24524.71134, 24533.69903, 24543.62308, 24570.26103, 24582.82109, 24587.03858, 24603.1098, 24607.90844, 24616.19898, 24621.97485, 24635.03834, 24638.15559, 24643.09097, 24670.45808, 24679.07218, 24683.59493, 24686.80782, 24692.41599, 24693.62843, 24704.80984, 24716.2102, 24724.12109, 24745.10365, 24760.81598, 24773.32242, 24775.87959, 24806.6512, 24842.95906, 24872.75613, 24875.5124, 24878.1109, 24893.72383, 24895.78465, 24898.7094, 24902.83026, 24915.20235, 24933.43537, 24946.10229, 24950.92718, 24977.08647, 24986.98577, 24989.68689, 24998.00781]
# raies=[14631.66,
#  14711.708,
#  15231.203,
#  15729.885,
#  15873.838,
#  16005.054,
#  16621.818,
#  16669.355,
#  16885.251,
#  17015.951,
#  17339.453,
#  17714.787,
#  17717.025,
#  20812.021,
#  21598.643,
#  21812.562,
#  22012.393,
#  22195.088,
#  22705.832,
#  22881.607,
#  22974.369,
#  23687.035,
#  24290.67]

# find_peaks_element("/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/syntspec/BD-221742b/CO_/", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14500-18500_BD-221742_2_Cabu_8.44_ratio_90.conv", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14500-18500_BD-221742_2_Cabu_8.44_ratio_4.conv")

raie_CN= find_peaks_element("/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/BD-221742/synth_margaux/",
                   "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-24500_avec_CN.conv",
                   "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-24500_sans_CN.conv")["minima"]

def get_raie_mol(chemin_fichier, raies, diff=0.05):
    # Dictionnaire temporaire pour stocker toutes les raies proches
    temp_resultats = {}
    
    with open(chemin_fichier, 'r') as file:
        for ligne in file:
            elements = ligne.split()
            if len(elements) >= 5:  
                longueur_onde = float(elements[0])
                log_gf = float(elements[2])
                
                # Pour chaque raie recherchée
                for raie in raies:
                    if abs(longueur_onde - raie) < diff:
                        # Si la raie n'est pas encore dans le dictionnaire temporaire
                        if raie not in temp_resultats:
                            temp_resultats[raie] = []
                        # Ajouter le tuple (longueur_onde, log_gf)
                        temp_resultats[raie].append((longueur_onde, log_gf))
    
    # Dictionnaire final avec seulement les raies ayant le plus grand log_gf
    # resultats = {}
    # for raie, candidats in temp_resultats.items():
    #     if candidats:  # Si des candidats existent
    #         # Trier par log_gf et prendre celui avec la plus grande valeur
    #         meilleur_candidat = max(candidats, key=lambda x: x[1])
    #         resultats[meilleur_candidat[0]] = meilleur_candidat[1]
    
    pprint(temp_resultats)
    return temp_resultats

C1317O_raies = [np.float64(14570.92), np.float64(14580.01), np.float64(14586.73), np.float64(14588.56), np.float64(14606.95), np.float64(14608.36), np.float64(14621.47), np.float64(14636.53), np.float64(14648.59), np.float64(14654.02), np.float64(14668.93), np.float64(14731.03), np.float64(14741.62), np.float64(14746.6), np.float64(14761.51), np.float64(14780.14), np.float64(14782.21), np.float64(14802.28), np.float64(14803.6), np.float64(14845.3), np.float64(14848.12), np.float64(14864.26), np.float64(14879.74), np.float64(14884.33), np.float64(14896.48), np.float64(14919.43), np.float64(14921.47), np.float64(14940.49), np.float64(14950.81), np.float64(14960.59), np.float64(14964.94), np.float64(14976.07), np.float64(14977.21), np.float64(14987.8), np.float64(14994.19), np.float64(14997.94), np.float64(15001.57), np.float64(15014.8), np.float64(15053.23), np.float64(15072.55), np.float64(15075.58), np.float64(15082.54), np.float64(15085.45), np.float64(15113.08), np.float64(15114.91), np.float64(15145.12), np.float64(15161.92), np.float64(15186.07), np.float64(15203.11), np.float64(15208.27), np.float64(15229.12), np.float64(15240.34), np.float64(15241.21), np.float64(15243.31), np.float64(15245.5), np.float64(15249.43), np.float64(15259.84), np.float64(15273.13), np.float64(15274.87), np.float64(15281.38), np.float64(15304.03), np.float64(15330.01), np.float64(15355.75), np.float64(15376.36), np.float64(15395.41), np.float64(15442.57), np.float64(15459.1), np.float64(15521.32), np.float64(15663.28), np.float64(15694.39), np.float64(15747.85), np.float64(15974.23)]

raies_validees = []
for i in raie_CN:
    if i > 14600:
        path_to_synth="/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/BD-221742/synth_margaux/"
        synth={ "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-24500_avec_CN.conv":"avec CN",
            "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-24500_sans_CN.conv":"sans CN"}
        zoom_lines({"":[i]}, path_to_synth, synth,stardata,2,lines_BD22)
        create_validation_window(i, raies_validees)

# range_dict={}
# for i in C1317O_raies:
#     if i < 18500:
#         synth={ "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-16000_ratioC_90_Cabu_8.44.conv":"ratio 90", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-16000_ratioC_4_Cabu_8.44.conv":"ratio 4", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-16000_ratioC_20_Cabu_8.44.conv":"ratio 20", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-16000_ratioC_15_Cabu_8.44.conv":"ratio 15", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-16000_ratioC_10_Cabu_8.44.conv":"ratio 10", 
#                    "4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_14550-16000_ratioC_8_Cabu_8.44.conv":"ratio 8", 
#                    "../../syntspec/BD-221742b/sans_CO_mol":"no CO"}
#         path_to_synth="/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/BD-221742/synth_margaux/"
#         zoom_lines({"":[i]}, path_to_synth, synth,stardata,2,lines_BD22, range=range_dict)
#     # elif 19750 < i < 22900:
#     #     zoom_lines({"":[i]}, "/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/syntspec/BD-221742b/", 
#     #                 {"Fe/4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_19750-22900_BD-221742_Feabu_-20.conv":"no Fe", 
#     #                 "Fe/4000g1.0z-0.50m1.0t02a+0.20c+0.346n+0.00o+0.20r+0.00s+0.00.mod_19750-22900_BD-221742_Feabu_7.2.conv":"7.2"},stardata,5,lines_BD22)
#     create_validation_window(i, raies_validees)

# for i in RAIES_CO_TEST:
#     # if 14600 < i < 18500:
#     zoom_lines({"":[i]}, "/Users/margauxvandererven/Library/CloudStorage/OneDrive-UniversitéLibredeBruxelles/memoire/syntspec/BD-221742b/", 
#                 {"sans_CO_mol2":"no CO", 
#                 "12C16O2" : "CO" 
#                 },stardata,5,lines_BD22)
#     create_validation_window(i, raies_validees)

# print("\nRaies validées:", raies_validees)
# print(range_dict)

    # Raies validées 12C16O : [15581.80736, 15582.58055, 15585.43714, 15586.44205, 15600.73887, 15802.50398, 15805.57685, 15820.39628, 15849.19672, 15855.8246, 15869.9568, 16159.30605, 16193.07854, 16211.77067, 16222.60361, 16237.90119, 16249.53172, 16273.9354, 16276.23821, 16309.23208, 16314.42677, 16438.77651, 16449.34757, 16461.09421, 16469.0747,
    # 16490.49989, 16578.97528, 16606.53682, 16610.13359, 16627.2922, 16629.45485, 16630.36307, 16637.40784, 16640.3477, 16670.58914, 16671.54842, 16677.63137, 16736.43647, 16771.63077, 16796.19722, 16848.70516, 16852.89683, 16876.5761, 16881.79386, 17014.95943, 17045.98627, 17086.99221, 17151.07925, 17213.34178,
    # 23109.4062, 23122.13423, 23148.953, 23163.04853, 23177.60478, 23192.62432, 23208.10977, 23292.62207, 23389.21521, 23424.344, 23426.2994, 23607.65302, 23701.82089, 23762.87717, 23805.98686, 23814.92488, 23877.94117, 23909.8119, 23978.93624, 24086.14331, 24258.32372, 24288.55814, 24395.23411, 24397.34598, 24635.03834, 24686.80782, 24760.81598]


    # Raies validées 13C17O : [np.float64(14570.92), np.float64(14580.01), np.float64(14586.73), np.float64(14588.56), np.float64(14606.95), np.float64(14608.36), np.float64(14621.47), np.float64(14636.53), np.float64(14648.59), np.float64(14654.02), np.float64(14668.93), np.float64(14731.03), np.float64(14741.62), np.float64(14746.6), np.float64(14761.51), np.float64(14780.14), np.float64(14782.21), np.float64(14802.28), np.float64(14803.6), np.float64(14845.3), np.float64(14848.12), np.float64(14864.26), np.float64(14879.74), np.float64(14884.33), np.float64(14896.48), np.float64(14919.43), np.float64(14921.47), np.float64(14940.49), np.float64(14950.81), np.float64(14960.59), np.float64(14964.94), np.float64(14976.07), np.float64(14977.21), np.float64(14987.8), np.float64(14994.19), np.float64(14997.94), np.float64(15001.57), np.float64(15014.8), np.float64(15053.23), np.float64(15072.55), np.float64(15075.58), np.float64(15082.54), np.float64(15085.45), np.float64(15113.08), np.float64(15114.91), np.float64(15145.12), np.float64(15161.92), np.float64(15186.07), np.float64(15203.11), np.float64(15208.27), np.float64(15229.12), np.float64(15240.34), np.float64(15241.21), np.float64(15243.31), np.float64(15245.5), np.float64(15249.43), np.float64(15259.84), np.float64(15273.13), np.float64(15274.87), np.float64(15281.38), np.float64(15304.03), np.float64(15330.01), np.float64(15355.75), np.float64(15376.36), np.float64(15395.41), np.float64(15442.57), np.float64(15459.1), np.float64(15521.32), np.float64(15663.28), np.float64(15694.39), np.float64(15747.85), np.float64(15974.23)]


    # Fe: 1e-8 1e-9: [14616.042, 14650.677, 14654.398, 14659.029, 14668.345, 14672.116, 14672.779, 14673.008, 14732.368, 14745.467, 14754.041, 14781.954, 14787.543, 14815.248, 14838.275, 14842.704, 14847.163, 14863.668, 14866.605, 14867.607, 14931.852, 14932.682, 14939.644, 14946.742, 14963.761, 14979.695, 14979.817, 14982.801, 14987.293, 17007.488, 17008.971, 17009.098, 17012.729, 17020.74, 17033.66, 17040.1, 17072.824, 17130.953, 17137.105, 17166.201, 17200.312, 17204.215, 17204.418, 17208.66, 17221.395, 17257.564, 17263.299, 17277.479, 17278.725, 17282.291, 17301.695, 17310.23, 17400.578, 17418.506, 17433.635, 17453.84, 17478.016, 17488.549, 17518.133, 17524.297, 17534.74, 17570.443, 17575.318, 17577.793, 17581.9, 17614.523, 17683.287, 17689.477, 17695.936, 17717.133, 17755.158, 17809.229, 17810.969, 17839.818, 17843.377, 17871.949, 17871.986, 17895.543, 17919.414, 17963.949, 17975.594, 17985.725]



    